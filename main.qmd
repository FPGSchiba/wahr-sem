---
title: "Quantitative Analyse der Abfallproduktion"
subtitle: "Eine stochastische Modellierung unter Berücksichtigung von Wetterbedingungen und Besucherströmen"
author: "Bratschi Jonas, Erhardt Jann, Gamper Gian"
format: pdf
editor: visual  
---

## Einleitung

Wie viel Abfall entsteht nach einem Stadtfest? (unentsorgt und entsorgt)

Beispiel: Zürich fest

Anzahl Personen: Poisson

Wetter: Binomial

Alter: Normal

In dieser Analyse simulieren wir den Abfall, der während eines Wochenend-Events produziert wird. Das Ziel ist es, das Abfallaufkommen in den verschiedenen Zeitslots zu verstehen und zu bewerten, wie sich unterschiedliche Faktoren wie Wetterbedingungen und Besucherzahlen auf die Abfallproduktion auswirken. Wir nutzen dazu statistische Methoden und die R-Bibliothek ggplot2, um die Ergebnisse zu visualisieren.

## Beschreibung

Zeit-Slots: 2 am Freitag, 3 am Samstag, 2 am Sonntag

Slot 1: Morgen-Mittag

Slot 2: Nachmittag

Slot 3: Abend-Nacht

Wetter: Bernoulli (schlecht, schön)

-\> Abhängig davon: Slots bleiben besucher

Essen: Lognormal in abhängigkeit zum Zeit-Slot

Trinken: Lognormal in abhängigkeit zum Zeit-Slot

Der Simulationscode besteht aus mehreren Schritten:

1. Initialisierung der Parameter: Es werden verschiedene Parameter wie Zeitslots, Wetterwahrscheinlichkeiten, Besucherzahlen und Abfallproduktionsraten definiert.
2. Simulationsschleife: Für nsim (100.000) Simulationen wird die Anzahl der Besucher und das Wetter für das Event zufällig bestimmt. Basierend auf diesen Informationen wird die Anzahl der Besucher pro Zeitslot berechnet.
3. Berechnung des Abfalls: Für jeden Zeitslot wird der erzeugte Abfall basierend auf den Besucherzahlen und den vorgegebenen Mittelwerten und Standardabweichungen für Essen und Trinken berechnet.
4. Speicherung und Visualisierung der Ergebnisse: Die Ergebnisse werden in einer Matrix gespeichert und anschließend in ein DataFrame konvertiert. Mit ggplot2 werden Boxplots und Histogramme erstellt, um die Verteilung des Abfalls pro Zeitslot und die Gesamtabfallproduktion darzustellen.


## Ergebnis

Die Simulation zeigt, dass die Abfallproduktion stark variiert, abhängig von den Besucherzahlen und den Wetterbedingungen.

```{r}
#| label: simulation
#| echo: false
#| warning: false
# Load required libraries
library(ggplot2)
library(tidyr)
library(dplyr)
library(scales)

slots <- c("FR Nachmittag", "FR Nacht", "SA Mittag", "SA Nachmittag", "SA Nacht", "SO Mittag", "SO Nachmittag")
wetter_probs <- c(2/3, 1/3)
first_slot <- c(0.10, 0.20)
rest_slots <- c(0.3, 0.4)
bad_weather_factor <- 0.7
essen_e <- c(2, 1, 3)
essen_sd <- c(2, 1, 1)
trinken_e <- c(1, 2, 4)
trinken_sd <- c(1, 1, 3)
nsim <- 100000
abfall_produziert <- 0
abfall_gewicht_pro_einheit <- 0.000030 # gweicht in tonnen

M <- matrix(NA, nrow = nsim, ncol = length(slots))

for (i in 1:nsim) {
  anzahl_personen <- rpois(1, 2200000)
  wetter_schoen <- sample(c(TRUE, FALSE), size = 1, prob = wetter_probs)
  
  temp_first <- first_slot
  temp_rest <- rest_slots
  
  if (!wetter_schoen) {
    temp_rest <- c(rest_slots[1] * bad_weather_factor, rest_slots[2] * bad_weather_factor)
    temp_first <- c(first_slot[1] * bad_weather_factor, first_slot[2] * bad_weather_factor)
  }
  
  besucher_pro_slot <- c(runif(1, min = first_slot[1], max = first_slot[2]) * anzahl_personen,
                         runif(1, min = rest_slots[1], max = rest_slots[2]) * anzahl_personen,
                         runif(1, min = first_slot[1], max = first_slot[2]) * anzahl_personen,
                         runif(1, min = rest_slots[1], max = rest_slots[2]) * anzahl_personen,
                         runif(1, min = rest_slots[1], max = rest_slots[2]) * anzahl_personen,
                         runif(1, min = first_slot[1], max = first_slot[2]) * anzahl_personen,
                         runif(1, min = rest_slots[1], max = rest_slots[2]) * anzahl_personen)
  
  besucher_pro_slot <- round(besucher_pro_slot)
  
  abfall_pro_slot <- c()
  current_time <- 2
  for (n in 1:length(besucher_pro_slot)) {
    abfall_pro_slot[n] <- rnorm(1, mean = besucher_pro_slot[n]*essen_e[current_time], sd = sqrt(besucher_pro_slot[n]*essen_sd[current_time]^2))
    
    if (current_time == 3) {
    current_time <- 1}
    else {current_time <- current_time + 1}

  }
  M[i,] <- abfall_pro_slot * abfall_gewicht_pro_einheit
}

# Convert the matrix to a data frame
df <- as.data.frame(M)
colnames(df) <- slots

# Reshape the data to long format
df_long <- df %>%
  pivot_longer(cols = everything(), names_to = "Slot", values_to = "Abfall")

# Create the boxplot using ggplot2
ggplot(df_long, aes(x = Slot, y = Abfall)) +
  geom_boxplot(color="black",fill="lightblue") +
  scale_y_continuous(labels = label_comma()) +
  labs(x = "Zeit Slot", y = "Abfall") +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 45, hjust = 1))

calculated_mean <- mean(rowSums(M))
```

Die erzeugten Boxplots visualisieren die Abfallmenge für jeden Zeitslot und verdeutlichen die Unterschiede zwischen den verschiedenen Zeitfenstern.

```{r}
#| label: histogram
#| echo: false
#| warning: false
ggplot(df, aes(x=rowSums(M))) + 
  geom_histogram(color="black", fill="lightblue") +
  scale_color_manual(name="Legende",values=c("red"),labels=c("mean")) +
  xlab("Abfall (T)") +
  theme_minimal() +
  ylab("Frequenz") + 
  geom_vline(xintercept = calculated_mean, color="red") +
  annotate("text", x=calculated_mean + 3, y=9600, label="Mean", angle=0, color="red")
```

Das Histogramm zeigt die Verteilung der Gesamtabfallproduktion über alle Simulationen hinweg. Der berechnete Mittelwert der Gesamtabfallproduktion liegt bei etwa {{< meta title >}} Tonnen.

## Diskussion

Die Ergebnisse der Simulationen verdeutlichen, dass bestimmte Zeitslots mehr Abfall produzieren als andere, was auf die unterschiedlichen Besucherzahlen und Aktivitäten zurückzuführen ist. Die Wetterbedingungen haben einen signifikanten Einfluss auf die Besucherzahlen und somit auch auf die Abfallproduktion. Ein schlechtes Wetter reduziert die Besucherzahlen und somit auch die erzeugte Abfallmenge erheblich. Diese Erkenntnisse können für die Planung und das Abfallmanagement zukünftiger Events genutzt werden, um Ressourcen effizienter einzusetzen und die Umweltbelastung zu minimieren. 

## Fazit

Die durchgeführte Simulation liefert wertvolle Einblicke in die Abfallproduktion während eines Wochenend-Events. Durch die Berücksichtigung von Faktoren wie Wetter und Besucherzahlen konnten realistische Szenarien modelliert werden. Die Visualisierungen zeigen deutlich, wie sich die Abfallproduktion über die verschiedenen Zeitslots verteilt und welche Einflussfaktoren dabei eine Rolle spielen. Diese Informationen können zur Optimierung der Abfallentsorgung und zur besseren Planung von Events genutzt werden. Zukünftige Arbeiten könnten sich auf die Verfeinerung der Modelle und die Einbeziehung weiterer Variablen konzentrieren, um die Vorhersagen noch präziser zu machen.



